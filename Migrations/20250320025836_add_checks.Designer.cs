// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250320025836_add_checks")]
    partial class add_checks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Category", b =>
                {
                    b.Property<int>("idCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCategory"));

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("idCategory");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("WebApplication1.Models.ClientGroup", b =>
                {
                    b.Property<int>("idClientGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idClientGroup"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idClientGroup");

                    b.ToTable("clientGroups");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Property<int>("idEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEmployee"));

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("idEmployee");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("WebApplication1.Models.Promotion", b =>
                {
                    b.Property<int>("idPromotion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPromotion"));

                    b.Property<decimal>("discount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("idPromotion");

                    b.ToTable("promotions");
                });

            modelBuilder.Entity("WebApplication1.Models.Role", b =>
                {
                    b.Property<int>("idRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRole"));

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idRole");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("WebApplication1.Models.RoomType", b =>
                {
                    b.Property<int>("idRoomType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRoomType"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idRoomType");

                    b.ToTable("roomTypes");
                });

            modelBuilder.Entity("WebApplication1.Models.Service", b =>
                {
                    b.Property<int>("idService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idService"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<int>("idCategory")
                        .HasColumnType("int");

                    b.Property<int?>("idClientGroup")
                        .HasColumnType("int");

                    b.Property<int>("idEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("idPromotion")
                        .HasColumnType("int");

                    b.Property<int>("idRoom")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("idService");

                    b.HasIndex("idCategory");

                    b.HasIndex("idClientGroup");

                    b.HasIndex("idEmployee");

                    b.HasIndex("idPromotion");

                    b.HasIndex("idRoom");

                    b.ToTable("services");
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUser"));

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("firstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("idRole")
                        .HasColumnType("int");

                    b.Property<string>("lastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("middleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idUser");

                    b.HasIndex("idRole");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebApplication1.Models.Service", b =>
                {
                    b.HasOne("WebApplication1.Models.Category", "Category")
                        .WithMany("services")
                        .HasForeignKey("idCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.ClientGroup", "ClientGroup")
                        .WithMany("services")
                        .HasForeignKey("idClientGroup");

                    b.HasOne("WebApplication1.Models.Employee", "Employee")
                        .WithMany("services")
                        .HasForeignKey("idEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Promotion", "Promotion")
                        .WithMany("services")
                        .HasForeignKey("idPromotion");

                    b.HasOne("WebApplication1.Models.RoomType", "RoomType")
                        .WithMany("services")
                        .HasForeignKey("idRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ClientGroup");

                    b.Navigation("Employee");

                    b.Navigation("Promotion");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.HasOne("WebApplication1.Models.Role", "Role")
                        .WithMany("users")
                        .HasForeignKey("idRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebApplication1.Models.Category", b =>
                {
                    b.Navigation("services");
                });

            modelBuilder.Entity("WebApplication1.Models.ClientGroup", b =>
                {
                    b.Navigation("services");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Navigation("services");
                });

            modelBuilder.Entity("WebApplication1.Models.Promotion", b =>
                {
                    b.Navigation("services");
                });

            modelBuilder.Entity("WebApplication1.Models.Role", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("WebApplication1.Models.RoomType", b =>
                {
                    b.Navigation("services");
                });
#pragma warning restore 612, 618
        }
    }
}
